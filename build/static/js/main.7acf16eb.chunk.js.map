{"version":3,"sources":["components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItemStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/section/SectionStyled.js","components/section/Section.js","components/main/Main.js","App.js","index.js"],"names":["ContactFormStyled","styled","div","ContactForm","state","name","number","handleInputChange","event","console","log","currentTarget","value","setState","onHandleSubmit","e","preventDefault","contact","id","uuidv4","props","contacts","find","toLowerCase","alert","addContact","onSubmit","this","onChange","type","className","pattern","title","required","Component","ContactListItemStyled","ContactListItem","onDeleteContact","onClick","ContactList","filter","includes","map","FilterStyled","Filter","SectionStyled","section","Section","children","toUpperCase","Main","prev","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7acf16eb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ContactFormStyled = styled.div`\n  padding: 25px 15px;\n  margin: 10px;\n  border: 1px solid;\n  border-radius: 5px;\n  width: 400px;\n  .inputName {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    display: block;\n  }\n  .btnAdd {\n    display: block;\n    margin-top: 30px;\n    padding: 3px 5px;\n    border-radius: 6px;\n    cursor: pointer;\n    background-color: transparent;\n    &:hover {\n      background-color: cornflowerblue;\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ContactFormStyled } from \"./ContactFormStyled\";\n\nclass ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n\n  handleInputChange = (event) => {\n    console.log(event.currentTarget.value);\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onHandleSubmit = (e) => {\n    e.preventDefault();\n\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    const sameContact = this.props.contacts.find(\n      (contact) => contact.name.toLowerCase() === this.state.name.toLowerCase()\n    );\n    if (sameContact) {\n      return alert(`${this.state.name} is already exists in the Phonebook`);\n    }\n\n    this.props.addContact(contact);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <ContactFormStyled>\n        <form onSubmit={this.onHandleSubmit}>\n          <label>\n            Name\n            <input\n              value={this.state.name}\n              onChange={this.handleInputChange}\n              type=\"text\"\n              name=\"name\"\n              className=\"inputName\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n            <input\n              type=\"tel\"\n              name=\"number\"\n              className=\"inputName\"\n              value={this.state.number}\n              onChange={this.handleInputChange}\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className=\"btnAdd\">\n            Add contact\n          </button>\n        </form>\n      </ContactFormStyled>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const ContactListItemStyled = styled.div`\n  .btnDelete {\n    padding: 3px;\n    margin: 7px 12px;\n    border-radius: 6px;\n    background-color: transparent;\n    cursor: pointer;\n    &:hover {\n      background-color: cornflowerblue;\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ContactListItemStyled } from \"./ContactListItemStyled\";\n\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\n  const onDeleteItem = () => {\n    onDeleteContact(id);\n  };\n\n  return (\n    <ContactListItemStyled>\n      <li>\n        {name}\n        <span>: </span>\n        {number}\n        <button className=\"btnDelete\" type=\"button\" onClick={onDeleteItem}>\n          Delete\n        </button>\n      </li>\n    </ContactListItemStyled>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./contactListItem/ContactListItem\";\n\nconst ContactList = ({ contacts, filter, onDeleteContact }) => {\n  return (\n    <ol>\n      {contacts\n        .filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        .map((contact) => (\n          <ContactListItem key={contact.id} {...contact} onDeleteContact={onDeleteContact} />\n        ))}\n    </ol>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const FilterStyled = styled.div`\n  margin-left: 10px;\n  .inputFilter {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FilterStyled } from \"./FilterStyled\";\n\nconst Filter = ({ handleInputChange }) => {\n  return (\n    <FilterStyled>\n      <label className=\"labelFilter\">\n        Find contacts by name:\n        <input className=\"inputFilter\" type=\"text\" name=\"filter\" onChange={handleInputChange} />\n      </label>\n    </FilterStyled>\n  );\n};\n\nFilter.propTypes = {\n  handleInputChange: PropTypes.func,\n};\nexport default Filter;\n","import styled from \"styled-components\";\n\nexport const SectionStyled = styled.section`\n  .sectionTitle {\n    color: cornflowerblue;\n    margin: 20px;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SectionStyled } from \"./SectionStyled\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <SectionStyled>\n      <h2 className=\"sectionTitle\">{title.toUpperCase()}</h2>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../filter/Filter\";\nimport Section from \"../section/Section\";\n\nclass Main extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleInputChange = (event) => {\n    console.log(event.currentTarget.value);\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = (contact) => {\n    this.setState((prev) => ({ contacts: [...prev.contacts, contact] }));\n  };\n\n  onDeleteContact = (id) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"cntList updated\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm addContact={this.addContact} contacts={contacts} />\n        </Section>\n        <Filter handleInputChange={this.handleInputChange} />\n        <Section title=\"Contacts\">\n          <ContactList contacts={contacts} filter={filter} onDeleteContact={this.onDeleteContact} />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./components/main/Main\";\n\nconst App = () => {\n  return (\n    <>\n      <Main />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}